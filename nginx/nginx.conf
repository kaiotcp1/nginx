events { }

http {
    log_format upstreaminfo  '$remote_addr -> $upstream_addr | '
                            '$request | status=$status | '
                            'rt=$request_time sec';

    access_log /dev/stdout upstreaminfo;
    error_log /dev/stdout;

    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/m;
    client_max_body_size 10m;
    client_body_timeout 12s;
    client_header_timeout 12s;
    keepalive_timeout 15s;
    send_timeout 10s;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    upstream api_servers {
        server api:3000;
    }

    # Servidor HTTP - Redirecionamento para HTTPS
    server {
        listen 80;
        server_name kaiodev.online www.kaiodev.online;

        # Location para validação do Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirecionar tudo para HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Servidor HTTPS
    server {
        listen 443 ssl http2;
        server_name kaiodev.online www.kaiodev.online;

        ssl_certificate /etc/letsencrypt/live/kaiodev.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/kaiodev.online/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;";

        limit_req zone=one burst=5 nodelay;

        if ($http_user_agent ~* (sqlmap|wpscan|nikto|wget) ) {
            return 403;
        }

        location / {
            # Redirecionar raiz para health check
            location = / {
                return 302 /v1/health;
            }
            
            # Proxy normal para todas as outras rotas
            proxy_pass http://api_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
        }
    }
}